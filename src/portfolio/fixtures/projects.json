[{"model": "projects.project", "pk": 1, "fields": {"date_created": "2020-03-28T23:57:55.804Z", "date_modified": "2020-03-28T23:57:55.804Z", "name": "Transparency", "description": "Rebuilt the firm's primary internal analytical tool into a more interactive/dynamical tool using a React-Redux front-end consuming an API built using Django REST Framework.", "content_type": 11, "object_id": 1}}, {"model": "projects.project", "pk": 2, "fields": {"date_created": "2020-03-28T23:57:55.804Z", "date_modified": "2020-03-28T23:57:55.804Z", "name": "Asset Visualizations", "description": "Created a custom, flexible and proprietry charting package using D3.js that the firm now uses in a variety of applications to visualize data in more than 2 dimensions and animate the visualization over time.", "content_type": 11, "object_id": 1}}, {"model": "projects.project", "pk": 3, "fields": {"date_created": "2020-03-28T23:57:55.805Z", "date_modified": "2020-03-28T23:57:55.805Z", "name": "Rock Creek Insights", "description": "Constructed an application, Rock Creek Insights, using MeteorJS that the firm uses to provide client risk reporting, monitor risk and compare performances of managed pension funds.", "content_type": 11, "object_id": 1}}, {"model": "projects.project", "pk": 4, "fields": {"date_created": "2020-03-28T23:57:55.805Z", "date_modified": "2020-03-28T23:57:55.805Z", "name": "Risk Monitoring Application", "description": "Developed a Django application that used Bloomberg's API to monitor specific regulatory risk guidelines, replacing expensive State Street software and saving the firm upwards of seventy thousand dollars per year.", "content_type": 11, "object_id": 1}}, {"model": "projects.project", "pk": 5, "fields": {"date_created": "2020-03-28T23:58:10.720Z", "date_modified": "2020-03-28T23:58:10.720Z", "name": "P2P Lending Application", "description": "Developed internal Python applications using Flask that interfaced with P2P lending systems (Lending Club, Funding Circle, etc.) to allow the firm to manage, monitor and execute investments in real-time.", "content_type": 11, "object_id": 2}}, {"model": "projects.project", "pk": 6, "fields": {"date_created": "2020-03-28T23:58:29.643Z", "date_modified": "2020-03-28T23:58:29.643Z", "name": "Accounts API", "description": "Part of a small team that rebuilt our entire account/subscription management system as a decoupled API using Django REST Framework that interacted with several different data sources and synced the data to maintain account and subscription state.", "content_type": 11, "object_id": 3}}, {"model": "projects.project", "pk": 7, "fields": {"date_created": "2020-03-28T23:58:29.643Z", "date_modified": "2020-03-28T23:58:29.643Z", "name": "Apple News", "description": "Created our entire Apple News syndication platform that algorithmically converts article HTML into Apple News Format (JSON) and manages the publication of articles in Apple News by interacting with their API in celery background tasks in our Django platform.", "content_type": 11, "object_id": 3}}, {"model": "projects.project", "pk": 8, "fields": {"date_created": "2020-03-28T23:59:42.644Z", "date_modified": "2020-03-28T23:59:42.644Z", "name": "Algorithmic Trading in Futures Market - Neural Networks Approach", "description": "Designed, implemented and tested a Neural Network based algorithmic trading strategy for trading agricultural and metal commodities futures. Achieved a Sharpe Ratio of 1.46 and returns of 21% over a 4-month trading window between January 1, 2016, and May 1, 2016.", "content_type": 10, "object_id": 2}}, {"model": "projects.project", "pk": 9, "fields": {"date_created": "2020-03-29T00:00:10.130Z", "date_modified": "2020-03-29T00:00:10.130Z", "name": "Machine Learning in Fantasy Sports", "description": "Utilized massive data sets of NHL statistics from the past 10 years in an attempt to find hidden predictors of next game performance based on situational prediction models and cyclical/time series prediction models. Used combinations of Gaussian Mixture Models, Random Forest Classification algorithms and multivariate regression schemes to cluster players based on point distribution and then make predictions for future games based on opponent statistics, team statistics and momentum indicators for personal performances.", "content_type": 10, "object_id": 3}}, {"model": "projects.project", "pk": 10, "fields": {"date_created": "2020-03-29T00:01:01.156Z", "date_modified": "2020-03-29T00:01:01.156Z", "name": "WInd Turbine Calculator", "description": "My responsibilities for the creating of a wind turbine energy and economic analysis tool for the Power and Water division of General Electric included the functional programming of the economic analysis of wind turbine plants based on individual wind turbine parameters, mechanical considerations, climate considerations, and locational considerations. Eventually, the team was able to create a web-based Wind Turbine calculator prototype in Python that allowed GE to compare the costs and energy production of various wind turbine designs based on numerous wind turbine design parameters and wind turbine locations.", "content_type": 10, "object_id": 1}}, {"model": "projects.project", "pk": 11, "fields": {"date_created": "2020-03-29T00:01:01.156Z", "date_modified": "2020-03-29T00:01:01.156Z", "name": "3 Link Parallel Planar Robot Manipulator", "description": "Designed, constructed and programmed a planar robot consisting of three separate 2-link arms controlling the desired and manipulated position of a target platform on a planar surface", "content_type": 10, "object_id": 1}}]